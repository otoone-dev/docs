#include <cstddef>
#include "wavedata.h"

const float waveAfuueBrass[256] = {
    -11947,-14483,-17018,-19554,-22090,-24625,-26859,-27731,
    -28604,-29476,-30348,-31221,-31703,-31501,-31300,-31099,
    -30897,-30696,-30352,-29891,-29429,-28967,-28506,-28044,
    -27548,-27038,-26529,-26019,-25510,-25001,-24497,-23994,
    -23492,-22989,-22486,-21991,-21569,-21148,-20727,-20306,
    -19884,-19462,-19036,-18610,-18184,-17758,-17332,-16876,
    -16385,-15893,-15402,-14910,-14419,-13958,-13515,-13072,
    -12629,-12185,-11742,-11424,-11133,-10842,-10551,-10261,
    -9970,-9767,-9564,-9362,-9159,-8956,-8751,-8533,
    -8315,-8097,-7879,-7661,-7435,-7196,-6956,-6716,
    -6476,-6236,-5994,-5751,-5507,-5263,-5019,-4776,
    -4554,-4342,-4129,-3917,-3704,-3491,-3320,-3153,
    -2986,-2819,-2653,-2484,-2304,-2124,-1944,-1764,
    -1584,-1382,-1125,-868,-611,-354,-97,163,
    430,697,964,1231,1498,1715,1904,2093,
    2282,2470,2659,2829,2996,3162,3328,3495,
    3661,3848,4036,4223,4411,4598,4782,4947,
    5113,5278,5444,5610,5767,5909,6052,6194,
    6336,6479,6621,6763,6904,7046,7188,7330,
    7458,7582,7706,7830,7954,8078,8199,8319,
    8440,8560,8681,8806,8971,9137,9302,9468,
    9634,9809,10013,10216,10420,10623,10826,11038,
    11261,11484,11706,11929,12151,12343,12516,12690,
    12863,13037,13210,13281,13329,13376,13424,13472,
    13519,13562,13606,13649,13692,13735,13803,13986,
    14169,14352,14534,14717,14880,15006,15133,15259,
    15386,15512,15544,15497,15450,15403,15356,15309,
    15343,15408,15473,15538,15603,15668,15897,16143,
    16389,16634,16880,17115,17242,17368,17495,17621,
    17748,17872,17991,18109,18228,18346,18465,18599,
    18751,18904,19056,19208,19361,18903,18097,17291,
    16485,15678,14872,12654,10121,7589,5057,2524,
};

const float waveAfuueFlute[256] = {
  767,509,509,1024,768,806,876,1052,1285,1536,1785,2014,2213,2399,2598,2827,
  3074,3320,3555,3822,4273,4908,5336,5586,5762,5929,6109,6281,6477,6753,7094,7410,
  7703,8024,8394,8771,9166,9582,10088,10665,11211,11769,12458,13214,14072,15032,16159,17486,
  19100,20781,22171,23374,24576,25792,27008,28243,29385,30435,31397,32126,32311,31781,30802,29667,
  28600,27495,26224,24776,23210,21585,20005,18515,17203,16159,15310,14651,14112,13636,13179,12692,
  12258,11868,11540,11224,10831,10325,9858,9507,9226,8966,8709,8452,8193,7918,7604,7252,
  6935,6644,6338,6024,5786,5589,5367,5122,4872,4638,4458,4355,4252,4072,3840,3599,
  3385,3225,3107,3006,2895,2815,2727,2589,2450,2337,2236,2126,2047,1970,1867,1790,
  1713,1610,1533,1456,1354,1277,1200,1100,1040,1010,964,868,733,595,504,403,
  223,-11,-263,-514,-749,-929,-1031,-1134,-1312,-1535,-1749,-1928,-2108,-2326,-2575,-2851,
  -3184,-3593,-4006,-4357,-4694,-5057,-5411,-5820,-6329,-6801,-7177,-7558,-8056,-8667,-9332,-10099,
  -10966,-11869,-12837,-13880,-15026,-16296,-17619,-19027,-20488,-22232,-24299,-26303,-28110,-29699,-31034,-31612,
  -31539,-31100,-30475,-29732,-28793,-27715,-26642,-25605,-24595,-23622,-22658,-21576,-20381,-19246,-18194,-17208,
  -16340,-15646,-15013,-14336,-13651,-13002,-12354,-11719,-11079,-10469,-9920,-9504,-9148,-8786,-8453,-8120,
  -7764,-7443,-7132,-6756,-6309,-5933,-5622,-5301,-4951,-4648,-4412,-4229,-4049,-3831,-3588,-3344,
  -3127,-2947,-2768,-2554,-2331,-2153,-2052,-1957,-1800,-1604,-1394,-1232,-1084,-936,-719,-406,
};

const float waveAfuueCla[256] = {
    -2725, -4620, -6515, -8205, -9429, -10653, -11167, -11228,
    -11289, -10400, -9424, -8404, -7236, -6067, -5213, -4643,
    -4072, -3849, -3695, -3522, -3224, -2926, -2523, -1988,
    -1453, -1125, -868, -640, -929, -1218, -1632, -2270,
    -2908, -3621, -4373, -5124, -5539, -5942, -6163, -5900,
    -5638, -5276, -4842, -4408, -4151, -3917, -3694, -3516,
    -3337, -3208, -3130, -3052, -2849, -2616, -2351, -1813,
    -1275, -780, -345, 89, 378, 609, 830, 612,
    393, -163, -1420, -2677, -4501, -6654, -8807, -10446,
    -12050, -13185, -12849, -12514, -11494, -9907, -8321, -7035,
    -5800, -4678, -4153, -3628, -3319, -3263, -3206, -3520,
    -3945, -4414, -5441, -6467, -7738, -9411, -11083, -12853,
    -14667, -16482, -18033, -19581, -20991, -22070, -23149, -23635,
    -23727, -23818, -23236, -22582, -21959, -21444, -20930, -20619,
    -20496, -20374, -20523, -20731, -20941, -21163, -21386, -21378,
    -21066, -20754, -19956, -18984, -17975, -16123, -14271, -12090,
    -9293, -6496, -3639, -750, 2139, 4240, 6307, 8028,
    8781, 9533, 9689, 9393, 9097, 8661, 8206, 7753,
    7317, 6881, 6334, 5668, 5002, 4735, 4573, 4565,
    6025, 7486, 9250, 11467, 13685, 14758, 15353, 15921,
    13932, 11944, 9593, 6458, 3322, 906, -1071, -3050,
    -3454, -3733, -3830, -3324, -2819, -2345, -1897, -1450,
    -1309, -1225, -1106, -780, -454, 56, 791, 1527,
    2217, 2893, 3541, 3776, 4011, 4010, 3604, 3198,
    2798, 2399, 2001, 2597, 3214, 4136, 5827, 7517,
    9113, 10644, 12175, 12856, 13437, 13838, 13517, 13197,
    12463, 11326, 10189, 8887, 7546, 6241, 5207, 4173,
    3476, 3243, 3010, 3653, 4627, 5629, 7526, 9422,
    11412, 13586, 15759, 17718, 19556, 21394, 23017, 24628,
    26156, 27437, 28718, 29698, 30439, 31179, 31538, 31836,
    31923, 30970, 30017, 28319, 25791, 23264, 20193, 16967,
    13773, 10931, 8088, 5531, 3420, 1309, -829, -2979,
};


const float waveAfuueViolin[256] = {
  253,753,634,515,-248,-623,-1263,-1643,-2022,-2782,-3288,-4048,-4300,-4552,-5313,-6326,
  -7340,-9370,-10891,-12413,-14695,-17991,-21542,-20779,-18238,-14428,-12903,-11124,-10361,-9343,-8070,-7306,
  -6796,-6032,-5775,-5264,-5007,-4496,-4238,-3726,-3467,-2955,-2696,-2436,-1921,-1660,-1397,-1133,
  -866,-599,-334,-198,-61,202,466,729,992,1254,1516,1775,2285,2534,3289,3788,
  4287,4532,5284,6034,6784,8041,9044,10556,11815,13077,14848,16620,21694,30070,27781,25238,
  20918,18629,16341,14562,13035,10999,9726,8200,7182,6418,5908,5398,4888,4378,3868,3611,
  3355,3099,2842,2586,2330,2075,1946,1817,1815,1559,1558,1557,1303,1174,1045,1043,
  915,787,786,658,530,276,275,147,19,-236,-237,-365,-492,-747,-1002,-1256,
  -1511,-1638,-1766,-2020,-2275,-2784,-3038,-3293,-3547,-3801,-4310,-4564,-4819,-5328,-5583,-5838,
  -6347,-7111,-7620,-8384,-9402,-9911,-10927,-12452,-13469,-14486,-15504,-16521,-17538,-19063,-20081,-21353,
  -22879,-24914,-26948,-28475,-30509,-31019,-30514,-28994,-26459,-23415,-21387,-19866,-17839,-16066,-14802,-13538,
  -12529,-11520,-10512,-10013,-8498,-8000,-7249,-6752,-6510,-6015,-5778,-5540,-4792,-4551,-4307,-4058,
  -3930,-3800,-3541,-3408,-3274,-3011,-2749,-2614,-2479,-2217,-1956,-1694,-1430,-913,-651,-136,
  125,1146,1659,2426,3701,4722,6251,8541,10831,14899,17950,14145,11862,10595,8313,7807,
  6541,5527,4514,3755,3251,2492,2241,1735,1484,1233,981,728,603,477,225,227,
  102,-24,-22,-148,-273,-144,-17,-16,493,368,242,244,118,-8,-6,-4,
};

const float waveSynthA1[256] = {
-1877, -5352, -8694, -11826, -14683, -17220, -19409, -21242, -22727, -23887, -24754, -25368, -25769, -25998, -26093, -26085, 
-26002, -25867, -25694, -25498, -25286, -25064, -24837, -24606, -24374, -24140, -23906, -23672, -23438, -23204, -22969, -22735, 
-22500, -22266, -22032, -21797, -21563, -21329, -21094, -20860, -20625, -20391, -20157, -19922, -19688, -19454, -19219, -18985, 
-18750, -18516, -18282, -18047, -17813, -17579, -17344, -17110, -16875, -16641, -16407, -16172, -15938, -15704, -15469, -15235, 
-15000, -14766, -14532, -14297, -14063, -13829, -13594, -13360, -13125, -12891, -12657, -12422, -12188, -11954, -11719, -11485, 
-11250, -11016, -10782, -10547, -10313, -10079, -9844, -9610, -9375, -9141, -8907, -8672, -8438, -8204, -7969, -7735, 
-7500, -7266, -7032, -6797, -6563, -6329, -6094, -5860, -5625, -5391, -5157, -4922, -4688, -4454, -4219, -3985, 
-3750, -3516, -3282, -3047, -2813, -2579, -2344, -2110, -1875, -1641, -1407, -1172, -938, -704, -469, -235, 
0, 234, 468, 703, 937, 1171, 1406, 1640, 1875, 2109, 2343, 2578, 2812, 3046, 3281, 3515, 
3750, 3984, 4218, 4453, 4687, 4921, 5156, 5390, 5625, 5859, 6093, 6328, 6562, 6796, 7031, 7265, 
7500, 7734, 7968, 8203, 8437, 8671, 8906, 9140, 9375, 9609, 9843, 10078, 10312, 10546, 10781, 11015, 
11250, 11484, 11718, 11953, 12187, 12421, 12656, 12890, 13125, 13359, 13593, 13828, 14062, 14296, 14531, 14765, 
15000, 15234, 15468, 15703, 15937, 16171, 16406, 16640, 16875, 17109, 17343, 17578, 17812, 18046, 18281, 18515, 
18750, 18984, 19218, 19453, 19687, 19921, 20156, 20390, 20625, 20859, 21093, 21328, 21562, 21796, 22031, 22265, 
22500, 22734, 22968, 23203, 23437, 23671, 23905, 24138, 24371, 24602, 24829, 25051, 25263, 25459, 25631, 25767, 
25850, 25857, 25763, 25534, 25132, 24519, 23651, 22492, 21007, 19174, 16985, 14448, 11590, 8459, 5116, 1642, 
};

const float waveSynthA2[256] = {
-10000, -29766, -29532, -29297, -29063, -28829, -28594, -28360, -28125, -27891, -27657, -27422, -27188, -26954, -26719, -26485, 
-26250, -26016, -25782, -25547, -25313, -25079, -24844, -24610, -24375, -24141, -23907, -23672, -23438, -23204, -22969, -22735, 
-22500, -22266, -22032, -21797, -21563, -21329, -21094, -20860, -20625, -20391, -20157, -19922, -19688, -19454, -19219, -18985, 
-18750, -18516, -18282, -18047, -17813, -17579, -17344, -17110, -16875, -16641, -16407, -16172, -15938, -15704, -15469, -15235, 
-15000, -14766, -14532, -14297, -14063, -13829, -13594, -13360, -13125, -12891, -12657, -12422, -12188, -11954, -11719, -11485, 
-11250, -11016, -10782, -10547, -10313, -10079, -9844, -9610, -9375, -9141, -8907, -8672, -8438, -8204, -7969, -7735, 
-7500, -7266, -7032, -6797, -6563, -6329, -6094, -5860, -5625, -5391, -5157, -4922, -4688, -4454, -4219, -3985, 
-3750, -3516, -3282, -3047, -2813, -2579, -2344, -2110, -1875, -1641, -1407, -1172, -938, -704, -469, -235, 
0, 234, 468, 703, 937, 1171, 1406, 1640, 1875, 2109, 2343, 2578, 2812, 3046, 3281, 3515, 
3750, 3984, 4218, 4453, 4687, 4921, 5156, 5390, 5625, 5859, 6093, 6328, 6562, 6796, 7031, 7265, 
7500, 7734, 7968, 8203, 8437, 8671, 8906, 9140, 9375, 9609, 9843, 10078, 10312, 10546, 10781, 11015, 
11250, 11484, 11718, 11953, 12187, 12421, 12656, 12890, 13125, 13359, 13593, 13828, 14062, 14296, 14531, 14765, 
15000, 15234, 15468, 15703, 15937, 16171, 16406, 16640, 16875, 17109, 17343, 17578, 17812, 18046, 18281, 18515, 
18750, 18984, 19218, 19453, 19687, 19921, 20156, 20390, 20625, 20859, 21093, 21328, 21562, 21796, 22031, 22265, 
22500, 22734, 22968, 23203, 23437, 23671, 23906, 24140, 24375, 24609, 24843, 25078, 25312, 25546, 25781, 26015, 
26250, 26484, 26718, 26953, 27187, 27421, 27656, 27890, 28125, 28359, 28593, 28828, 29062, 29296, 29531, 9765, 
};

const float waveSynthB1[256] = {
-801,404,1018,2054,2928,3397,4526,5109,5435,6442,6897,7171,7818,8283,8575,8989,
9327,9546,10262,10451,10585,10752,10886,10984,11092,11152,11194,11276,11248,11225,11168,11138,
11113,10995,10888,10791,10523,10426,10340,10139,9987,9844,9639,9513,9383,9063,8965,8864,
8667,8516,8352,8068,7958,7825,7774,7878,8004,8354,8608,8933,9711,10050,10496,11566,
12073,12784,13783,14411,15336,17518,18126,19059,20010,20460,21192,22248,22543,23053,23911,24134,
24528,25012,25189,25520,25757,25817,26020,26023,25937,25550,25548,25480,24826,24808,24700,23984,
23969,23767,22843,22822,22604,20854,20771,20551,19300,19252,19034,17687,17626,17414,15942,15852,
15665,14188,14084,13907,12367,12244,11925,9785,9644,9514,8173,8035,7900,6691,6579,6428,
5194,5088,4967,3691,3547,3475,2337,2167,2017,511,376,304,-670,-795,-857,-1887,
-2041,-2091,-2998,-3138,-3199,-4180,-4288,-4345,-5893,-6195,-6241,-7291,-7443,-7479,-8571,-8741,
-8769,-9877,-10081,-10104,-11155,-11378,-11391,-12424,-12655,-12660,-14241,-14489,-14957,-15374,-15594,-16140,
-16461,-16639,-17207,-17492,-17660,-18184,-18479,-18661,-19015,-19355,-19572,-20225,-20467,-20629,-20895,-21044,
-21150,-21372,-21508,-21607,-21803,-21877,-21934,-22050,-22122,-22183,-22294,-22329,-22360,-22446,-22447,-22448,
-22415,-22442,-22469,-22476,-22453,-22432,-22442,-22394,-22346,-22273,-22254,-22236,-22053,-22016,-21976,-21930,
-21853,-21759,-21725,-21700,-21671,-21478,-21443,-21400,-21075,-20847,-20531,-20120,-19694,-19078,-17459,-16935,
-16145,-15019,-14540,-13775,-12459,-11933,-11055,-9792,-9294,-8426,-6990,-6597,-5871,-4332,-3635,-2277
};

const float waveSynthB2[256] = {
6946,10510,12198,12140,10825,10965,11098,14342,14797,14877,14648,14423,14208,12181,12013,11957,
11102,10995,10673,7982,7800,7510,5895,5821,5602,4849,4843,4770,4020,4019,3906,3701,
3531,3538,3557,3851,4021,4245,4609,4575,4534,4128,4062,3995,4447,4515,4568,4141,
4035,3959,3685,3331,3096,2318,1998,1808,1789,1554,1444,1457,1807,1932,1941,2447,
2545,2533,2442,2449,2475,2729,2777,2886,2946,2840,2837,3266,3334,3098,2738,2770,
2850,6164,6294,9923,26504,26621,26391,25936,25500,26208,27365,28154,28241,28372,27449,26401,
25119,23521,23024,22511,20529,19399,18370,16357,15275,14405,13096,12642,12339,11790,11302,11011,
10014,9420,9108,9073,8138,8020,8035,7839,7853,7817,6904,6724,6663,6092,6046,6040,
5700,5669,5620,4952,4863,4505,2707,2661,2527,587,503,262,-660,-691,-824,-1060,
-803,-835,-900,-1137,-1162,-1198,-1129,-1299,-1504,-2389,-2271,-2154,-1625,-1765,-1893,-2418,
-2929,-3340,-3695,-3548,-3451,-3712,-4111,-4350,-5251,-5585,-5758,-5758,-6363,-6525,-6554,-7282,
-7479,-7562,-8645,-8669,-8695,-9682,-9892,-10023,-11271,-11386,-11528,-12671,-12733,-12823,-13384,-13416,
-13547,-14298,-14319,-14302,-14604,-14605,-14683,-14847,-14635,-14623,-14591,-14454,-14600,-14820,-15253,-15143,
-15003,-15043,-15084,-15122,-15045,-15127,-15211,-15381,-15367,-15356,-14990,-15049,-15088,-15399,-15349,-15325,
-15546,-15456,-15408,-15406,-15402,-15503,-15485,-15206,-15153,-15192,-15497,-15499,-15454,-15046,-15007,-15014,
-15166,-15179,-15097,-14493,-14470,-14490,-14021,-13940,-13973,-14109,-14121,-14074,-14106,-14121,-11424,-5764
};

/*
    for (int i = 0; i < 256; i++) {
        float v = -24000.0f;
        if (i >= 128) {
            v = 24000.0f;
        }
        printf("%1.1ff,", v);
        if (i % 16==15) {
            printf("\n");
        }
    }
*/
const float wavePureSquare[256] = {
-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,
-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,
-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,
-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,
-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,
-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,
-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,
-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,-24000.0f,
24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,
24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,
24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,
24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,
24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,
24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,
24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,
24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,24000.0f,
};

/*
    for (int i = 0; i < 256; i++) {
        float v = -24000.0f + 48000.0f * (i / 255.0f);
        printf("%1.1ff,", v);
        if (i % 16==15) {
            printf("\n");
        }
    }
*/
const float wavePureSaw[256] = {
-24000.0f,-23811.8f,-23623.5f,-23435.3f,-23247.1f,-23058.8f,-22870.6f,-22682.4f,-22494.1f,-22305.9f,-22117.6f,-21929.4f,-21741.2f,-21552.9f,-21364.7f,-21176.5f,
-20988.2f,-20800.0f,-20611.8f,-20423.5f,-20235.3f,-20047.1f,-19858.8f,-19670.6f,-19482.4f,-19294.1f,-19105.9f,-18917.6f,-18729.4f,-18541.2f,-18352.9f,-18164.7f,
-17976.5f,-17788.2f,-17600.0f,-17411.8f,-17223.5f,-17035.3f,-16847.1f,-16658.8f,-16470.6f,-16282.4f,-16094.1f,-15905.9f,-15717.6f,-15529.4f,-15341.2f,-15152.9f,
-14964.7f,-14776.5f,-14588.2f,-14400.0f,-14211.8f,-14023.5f,-13835.3f,-13647.1f,-13458.8f,-13270.6f,-13082.4f,-12894.1f,-12705.9f,-12517.6f,-12329.4f,-12141.2f,
-11952.9f,-11764.7f,-11576.5f,-11388.2f,-11200.0f,-11011.8f,-10823.5f,-10635.3f,-10447.1f,-10258.8f,-10070.6f,-9882.4f,-9694.1f,-9505.9f,-9317.6f,-9129.4f,
-8941.2f,-8752.9f,-8564.7f,-8376.5f,-8188.2f,-8000.0f,-7811.8f,-7623.5f,-7435.3f,-7247.1f,-7058.8f,-6870.6f,-6682.4f,-6494.1f,-6305.9f,-6117.6f,
-5929.4f,-5741.2f,-5552.9f,-5364.7f,-5176.5f,-4988.2f,-4800.0f,-4611.8f,-4423.5f,-4235.3f,-4047.1f,-3858.8f,-3670.6f,-3482.4f,-3294.1f,-3105.9f,
-2917.6f,-2729.4f,-2541.2f,-2352.9f,-2164.7f,-1976.5f,-1788.2f,-1600.0f,-1411.8f,-1223.5f,-1035.3f,-847.1f,-658.8f,-470.6f,-282.4f,-94.1f,
94.1f,282.4f,470.6f,658.8f,847.1f,1035.3f,1223.5f,1411.8f,1600.0f,1788.2f,1976.5f,2164.7f,2352.9f,2541.2f,2729.4f,2917.6f,
3105.9f,3294.1f,3482.4f,3670.6f,3858.8f,4047.1f,4235.3f,4423.5f,4611.8f,4800.0f,4988.2f,5176.5f,5364.7f,5552.9f,5741.2f,5929.4f,
6117.6f,6305.9f,6494.1f,6682.4f,6870.6f,7058.8f,7247.1f,7435.3f,7623.5f,7811.8f,8000.0f,8188.2f,8376.5f,8564.7f,8752.9f,8941.2f,
9129.4f,9317.6f,9505.9f,9694.1f,9882.4f,10070.6f,10258.8f,10447.1f,10635.3f,10823.5f,11011.8f,11200.0f,11388.2f,11576.5f,11764.7f,11952.9f,
12141.2f,12329.4f,12517.6f,12705.9f,12894.1f,13082.4f,13270.6f,13458.8f,13647.1f,13835.3f,14023.5f,14211.8f,14400.0f,14588.2f,14776.5f,14964.7f,
15152.9f,15341.2f,15529.4f,15717.6f,15905.9f,16094.1f,16282.4f,16470.6f,16658.8f,16847.1f,17035.3f,17223.5f,17411.8f,17600.0f,17788.2f,17976.5f,
18164.7f,18352.9f,18541.2f,18729.4f,18917.6f,19105.9f,19294.1f,19482.4f,19670.6f,19858.8f,20047.1f,20235.3f,20423.5f,20611.8f,20800.0f,20988.2f,
21176.5f,21364.7f,21552.9f,21741.2f,21929.4f,22117.6f,22305.9f,22494.1f,22682.4f,22870.6f,23058.8f,23247.1f,23435.3f,23623.5f,23811.8f,24000.0f,
};

/*
    for (int i = 0; i < 256; i++) {
        float v = -24000.0f + 2*48000.0f * (i / 255.0f);
        if (v > 24000.0f) {
            v = 24000.0f - (v - 24000.0f);
        }
        printf("%1.1ff,", v);
        if (i % 16==15) {
            printf("\n");
        }
    }
*/
const float wavePureTriangle[256] = {
-24000.0f,-23623.5f,-23247.1f,-22870.6f,-22494.1f,-22117.6f,-21741.2f,-21364.7f,-20988.2f,-20611.8f,-20235.3f,-19858.8f,-19482.4f,-19105.9f,-18729.4f,-18352.9f,
-17976.5f,-17600.0f,-17223.5f,-16847.1f,-16470.6f,-16094.1f,-15717.6f,-15341.2f,-14964.7f,-14588.2f,-14211.8f,-13835.3f,-13458.8f,-13082.4f,-12705.9f,-12329.4f,
-11952.9f,-11576.5f,-11200.0f,-10823.5f,-10447.1f,-10070.6f,-9694.1f,-9317.6f,-8941.2f,-8564.7f,-8188.2f,-7811.8f,-7435.3f,-7058.8f,-6682.4f,-6305.9f,
-5929.4f,-5552.9f,-5176.5f,-4800.0f,-4423.5f,-4047.1f,-3670.6f,-3294.1f,-2917.6f,-2541.2f,-2164.7f,-1788.2f,-1411.8f,-1035.3f,-658.8f,-282.4f,
94.1f,470.6f,847.1f,1223.5f,1600.0f,1976.5f,2352.9f,2729.4f,3105.9f,3482.4f,3858.8f,4235.3f,4611.8f,4988.2f,5364.7f,5741.2f,
6117.6f,6494.1f,6870.6f,7247.1f,7623.5f,8000.0f,8376.5f,8752.9f,9129.4f,9505.9f,9882.4f,10258.8f,10635.3f,11011.8f,11388.2f,11764.7f,
12141.2f,12517.6f,12894.1f,13270.6f,13647.1f,14023.5f,14400.0f,14776.5f,15152.9f,15529.4f,15905.9f,16282.4f,16658.8f,17035.3f,17411.8f,17788.2f,
18164.7f,18541.2f,18917.6f,19294.1f,19670.6f,20047.1f,20423.5f,20800.0f,21176.5f,21552.9f,21929.4f,22305.9f,22682.4f,23058.8f,23435.3f,23811.8f,
23811.8f,23435.3f,23058.8f,22682.4f,22305.9f,21929.4f,21552.9f,21176.5f,20800.0f,20423.5f,20047.1f,19670.6f,19294.1f,18917.6f,18541.2f,18164.7f,
17788.2f,17411.8f,17035.3f,16658.8f,16282.4f,15905.9f,15529.4f,15152.9f,14776.5f,14400.0f,14023.5f,13647.1f,13270.6f,12894.1f,12517.6f,12141.2f,
11764.7f,11388.2f,11011.8f,10635.3f,10258.8f,9882.4f,9505.9f,9129.4f,8752.9f,8376.5f,8000.0f,7623.5f,7247.1f,6870.6f,6494.1f,6117.6f,
5741.2f,5364.7f,4988.2f,4611.8f,4235.3f,3858.8f,3482.4f,3105.9f,2729.4f,2352.9f,1976.5f,1600.0f,1223.5f,847.1f,470.6f,94.1f,
-282.4f,-658.8f,-1035.3f,-1411.8f,-1788.2f,-2164.7f,-2541.2f,-2917.6f,-3294.1f,-3670.6f,-4047.1f,-4423.5f,-4800.0f,-5176.5f,-5552.9f,-5929.4f,
-6305.9f,-6682.4f,-7058.8f,-7435.3f,-7811.8f,-8188.2f,-8564.7f,-8941.2f,-9317.6f,-9694.1f,-10070.6f,-10447.1f,-10823.5f,-11200.0f,-11576.5f,-11952.9f,
-12329.4f,-12705.9f,-13082.4f,-13458.8f,-13835.3f,-14211.8f,-14588.2f,-14964.7f,-15341.2f,-15717.6f,-16094.1f,-16470.6f,-16847.1f,-17223.5f,-17600.0f,-17976.5f,
-18352.9f,-18729.4f,-19105.9f,-19482.4f,-19858.8f,-20235.3f,-20611.8f,-20988.2f,-21364.7f,-21741.2f,-22117.6f,-22494.1f,-22870.6f,-23247.1f,-23623.5f,-24000.0f,
};

const float sinTable[1024] = {
0.000000f,0.006136f,0.012272f,0.018407f,0.024541f,0.030675f,0.036807f,0.042938f,0.049068f,0.055195f,0.061321f,0.067444f,0.073565f,0.079682f,0.085797f,0.091909f,
0.098017f,0.104122f,0.110222f,0.116319f,0.122411f,0.128498f,0.134581f,0.140658f,0.146730f,0.152797f,0.158858f,0.164913f,0.170962f,0.177004f,0.183040f,0.189069f,
0.195090f,0.201105f,0.207111f,0.213110f,0.219101f,0.225084f,0.231058f,0.237024f,0.242980f,0.248928f,0.254866f,0.260794f,0.266713f,0.272621f,0.278520f,0.284408f,
0.290285f,0.296151f,0.302006f,0.307850f,0.313682f,0.319502f,0.325310f,0.331106f,0.336890f,0.342661f,0.348419f,0.354164f,0.359895f,0.365613f,0.371317f,0.377007f,
0.382683f,0.388345f,0.393992f,0.399624f,0.405241f,0.410843f,0.416430f,0.422000f,0.427555f,0.433094f,0.438616f,0.444122f,0.449611f,0.455084f,0.460539f,0.465977f,
0.471397f,0.476799f,0.482184f,0.487550f,0.492898f,0.498228f,0.503538f,0.508830f,0.514103f,0.519356f,0.524590f,0.529804f,0.534998f,0.540172f,0.545325f,0.550458f,
0.555570f,0.560662f,0.565732f,0.570781f,0.575808f,0.580814f,0.585798f,0.590760f,0.595699f,0.600617f,0.605511f,0.610383f,0.615232f,0.620057f,0.624860f,0.629638f,
0.634393f,0.639124f,0.643832f,0.648514f,0.653173f,0.657807f,0.662416f,0.667000f,0.671559f,0.676093f,0.680601f,0.685084f,0.689541f,0.693971f,0.698376f,0.702755f,
0.707107f,0.711432f,0.715731f,0.720003f,0.724247f,0.728464f,0.732654f,0.736817f,0.740951f,0.745058f,0.749136f,0.753187f,0.757209f,0.761202f,0.765167f,0.769103f,
0.773010f,0.776888f,0.780737f,0.784557f,0.788346f,0.792107f,0.795837f,0.799537f,0.803208f,0.806848f,0.810457f,0.814036f,0.817585f,0.821103f,0.824589f,0.828045f,
0.831470f,0.834863f,0.838225f,0.841555f,0.844854f,0.848120f,0.851355f,0.854558f,0.857729f,0.860867f,0.863973f,0.867046f,0.870087f,0.873095f,0.876070f,0.879012f,
0.881921f,0.884797f,0.887640f,0.890449f,0.893224f,0.895966f,0.898674f,0.901349f,0.903989f,0.906596f,0.909168f,0.911706f,0.914210f,0.916679f,0.919114f,0.921514f,
0.923880f,0.926210f,0.928506f,0.930767f,0.932993f,0.935184f,0.937339f,0.939459f,0.941544f,0.943593f,0.945607f,0.947586f,0.949528f,0.951435f,0.953306f,0.955141f,
0.956940f,0.958704f,0.960431f,0.962121f,0.963776f,0.965394f,0.966976f,0.968522f,0.970031f,0.971504f,0.972940f,0.974339f,0.975702f,0.977028f,0.978317f,0.979570f,
0.980785f,0.981964f,0.983105f,0.984210f,0.985278f,0.986308f,0.987301f,0.988258f,0.989177f,0.990058f,0.990903f,0.991710f,0.992480f,0.993212f,0.993907f,0.994565f,
0.995185f,0.995767f,0.996313f,0.996820f,0.997290f,0.997723f,0.998118f,0.998476f,0.998795f,0.999078f,0.999322f,0.999529f,0.999699f,0.999831f,0.999925f,0.999981f,
1.000000f,0.999981f,0.999925f,0.999831f,0.999699f,0.999529f,0.999322f,0.999078f,0.998795f,0.998476f,0.998118f,0.997723f,0.997290f,0.996820f,0.996313f,0.995767f,
0.995185f,0.994565f,0.993907f,0.993212f,0.992480f,0.991710f,0.990903f,0.990058f,0.989177f,0.988258f,0.987301f,0.986308f,0.985278f,0.984210f,0.983105f,0.981964f,
0.980785f,0.979570f,0.978317f,0.977028f,0.975702f,0.974339f,0.972940f,0.971504f,0.970031f,0.968522f,0.966976f,0.965394f,0.963776f,0.962121f,0.960431f,0.958703f,
0.956940f,0.955141f,0.953306f,0.951435f,0.949528f,0.947586f,0.945607f,0.943593f,0.941544f,0.939459f,0.937339f,0.935184f,0.932993f,0.930767f,0.928506f,0.926210f,
0.923880f,0.921514f,0.919114f,0.916679f,0.914210f,0.911706f,0.909168f,0.906596f,0.903989f,0.901349f,0.898674f,0.895966f,0.893224f,0.890449f,0.887640f,0.884797f,
0.881921f,0.879012f,0.876070f,0.873095f,0.870087f,0.867046f,0.863973f,0.860867f,0.857729f,0.854558f,0.851355f,0.848120f,0.844854f,0.841555f,0.838225f,0.834863f,
0.831470f,0.828045f,0.824589f,0.821102f,0.817585f,0.814036f,0.810457f,0.806848f,0.803208f,0.799537f,0.795837f,0.792107f,0.788346f,0.784557f,0.780737f,0.776888f,
0.773010f,0.769103f,0.765167f,0.761202f,0.757209f,0.753187f,0.749136f,0.745058f,0.740951f,0.736816f,0.732654f,0.728464f,0.724247f,0.720003f,0.715731f,0.711432f,
0.707107f,0.702755f,0.698376f,0.693971f,0.689541f,0.685084f,0.680601f,0.676093f,0.671559f,0.667000f,0.662416f,0.657807f,0.653173f,0.648514f,0.643832f,0.639124f,
0.634393f,0.629638f,0.624859f,0.620057f,0.615232f,0.610383f,0.605511f,0.600616f,0.595699f,0.590760f,0.585798f,0.580814f,0.575808f,0.570781f,0.565732f,0.560661f,
0.555570f,0.550458f,0.545325f,0.540171f,0.534997f,0.529803f,0.524590f,0.519356f,0.514103f,0.508830f,0.503538f,0.498228f,0.492898f,0.487550f,0.482184f,0.476799f,
0.471397f,0.465976f,0.460539f,0.455083f,0.449611f,0.444122f,0.438616f,0.433094f,0.427555f,0.422000f,0.416429f,0.410843f,0.405241f,0.399624f,0.393992f,0.388345f,
0.382683f,0.377007f,0.371317f,0.365613f,0.359895f,0.354163f,0.348419f,0.342661f,0.336890f,0.331106f,0.325310f,0.319502f,0.313682f,0.307849f,0.302006f,0.296151f,
0.290285f,0.284408f,0.278520f,0.272621f,0.266713f,0.260794f,0.254866f,0.248928f,0.242980f,0.237023f,0.231058f,0.225084f,0.219101f,0.213110f,0.207111f,0.201105f,
0.195090f,0.189069f,0.183040f,0.177004f,0.170962f,0.164913f,0.158858f,0.152797f,0.146730f,0.140658f,0.134581f,0.128498f,0.122411f,0.116319f,0.110222f,0.104122f,
0.098017f,0.091909f,0.085797f,0.079682f,0.073564f,0.067444f,0.061321f,0.055195f,0.049067f,0.042938f,0.036807f,0.030675f,0.024541f,0.018407f,0.012271f,0.006136f,
-0.000000f,-0.006136f,-0.012272f,-0.018407f,-0.024541f,-0.030675f,-0.036807f,-0.042938f,-0.049068f,-0.055195f,-0.061321f,-0.067444f,-0.073565f,-0.079683f,-0.085797f,-0.091909f,
-0.098017f,-0.104122f,-0.110222f,-0.116319f,-0.122411f,-0.128498f,-0.134581f,-0.140658f,-0.146730f,-0.152797f,-0.158858f,-0.164913f,-0.170962f,-0.177004f,-0.183040f,-0.189069f,
-0.195090f,-0.201105f,-0.207112f,-0.213110f,-0.219101f,-0.225084f,-0.231058f,-0.237024f,-0.242980f,-0.248928f,-0.254866f,-0.260794f,-0.266713f,-0.272622f,-0.278520f,-0.284408f,
-0.290285f,-0.296151f,-0.302006f,-0.307850f,-0.313682f,-0.319502f,-0.325310f,-0.331106f,-0.336890f,-0.342661f,-0.348419f,-0.354164f,-0.359895f,-0.365613f,-0.371317f,-0.377007f,
-0.382683f,-0.388345f,-0.393992f,-0.399624f,-0.405241f,-0.410843f,-0.416430f,-0.422000f,-0.427555f,-0.433094f,-0.438616f,-0.444122f,-0.449612f,-0.455084f,-0.460539f,-0.465977f,
-0.471397f,-0.476799f,-0.482184f,-0.487550f,-0.492898f,-0.498228f,-0.503538f,-0.508830f,-0.514103f,-0.519356f,-0.524590f,-0.529804f,-0.534998f,-0.540172f,-0.545325f,-0.550458f,
-0.555570f,-0.560662f,-0.565732f,-0.570781f,-0.575808f,-0.580814f,-0.585798f,-0.590760f,-0.595699f,-0.600617f,-0.605511f,-0.610383f,-0.615232f,-0.620057f,-0.624860f,-0.629638f,
-0.634393f,-0.639125f,-0.643832f,-0.648515f,-0.653173f,-0.657807f,-0.662416f,-0.667000f,-0.671559f,-0.676093f,-0.680601f,-0.685084f,-0.689541f,-0.693972f,-0.698376f,-0.702755f,
-0.707107f,-0.711432f,-0.715731f,-0.720003f,-0.724247f,-0.728464f,-0.732654f,-0.736817f,-0.740951f,-0.745058f,-0.749136f,-0.753187f,-0.757209f,-0.761202f,-0.765167f,-0.769103f,
-0.773010f,-0.776888f,-0.780737f,-0.784557f,-0.788346f,-0.792107f,-0.795837f,-0.799537f,-0.803208f,-0.806848f,-0.810457f,-0.814036f,-0.817585f,-0.821103f,-0.824589f,-0.828045f,
-0.831470f,-0.834863f,-0.838225f,-0.841555f,-0.844854f,-0.848121f,-0.851355f,-0.854558f,-0.857729f,-0.860867f,-0.863973f,-0.867046f,-0.870087f,-0.873095f,-0.876070f,-0.879012f,
-0.881921f,-0.884797f,-0.887640f,-0.890449f,-0.893224f,-0.895966f,-0.898675f,-0.901349f,-0.903989f,-0.906596f,-0.909168f,-0.911706f,-0.914210f,-0.916679f,-0.919114f,-0.921514f,
-0.923880f,-0.926210f,-0.928506f,-0.930767f,-0.932993f,-0.935183f,-0.937339f,-0.939459f,-0.941544f,-0.943593f,-0.945607f,-0.947586f,-0.949528f,-0.951435f,-0.953306f,-0.955141f,
-0.956940f,-0.958704f,-0.960431f,-0.962121f,-0.963776f,-0.965394f,-0.966977f,-0.968522f,-0.970031f,-0.971504f,-0.972940f,-0.974339f,-0.975702f,-0.977028f,-0.978317f,-0.979570f,
-0.980785f,-0.981964f,-0.983105f,-0.984210f,-0.985278f,-0.986308f,-0.987301f,-0.988258f,-0.989177f,-0.990058f,-0.990903f,-0.991710f,-0.992480f,-0.993212f,-0.993907f,-0.994565f,
-0.995185f,-0.995767f,-0.996313f,-0.996820f,-0.997290f,-0.997723f,-0.998118f,-0.998476f,-0.998795f,-0.999078f,-0.999322f,-0.999529f,-0.999699f,-0.999831f,-0.999925f,-0.999981f,
-1.000000f,-0.999981f,-0.999925f,-0.999831f,-0.999699f,-0.999529f,-0.999322f,-0.999078f,-0.998795f,-0.998476f,-0.998118f,-0.997723f,-0.997290f,-0.996820f,-0.996313f,-0.995767f,
-0.995185f,-0.994565f,-0.993907f,-0.993212f,-0.992480f,-0.991710f,-0.990903f,-0.990058f,-0.989177f,-0.988258f,-0.987301f,-0.986308f,-0.985278f,-0.984210f,-0.983105f,-0.981964f,
-0.980785f,-0.979570f,-0.978317f,-0.977028f,-0.975702f,-0.974339f,-0.972940f,-0.971504f,-0.970031f,-0.968522f,-0.966976f,-0.965394f,-0.963776f,-0.962121f,-0.960430f,-0.958703f,
-0.956940f,-0.955141f,-0.953306f,-0.951435f,-0.949528f,-0.947586f,-0.945607f,-0.943593f,-0.941544f,-0.939459f,-0.937339f,-0.935183f,-0.932993f,-0.930767f,-0.928506f,-0.926210f,
-0.923879f,-0.921514f,-0.919114f,-0.916679f,-0.914210f,-0.911706f,-0.909168f,-0.906596f,-0.903989f,-0.901349f,-0.898674f,-0.895966f,-0.893224f,-0.890449f,-0.887640f,-0.884797f,
-0.881921f,-0.879012f,-0.876070f,-0.873095f,-0.870087f,-0.867046f,-0.863973f,-0.860867f,-0.857729f,-0.854558f,-0.851355f,-0.848120f,-0.844853f,-0.841555f,-0.838225f,-0.834863f,
-0.831469f,-0.828045f,-0.824589f,-0.821102f,-0.817585f,-0.814036f,-0.810457f,-0.806847f,-0.803208f,-0.799537f,-0.795837f,-0.792107f,-0.788346f,-0.784557f,-0.780737f,-0.776888f,
-0.773010f,-0.769103f,-0.765167f,-0.761202f,-0.757209f,-0.753187f,-0.749136f,-0.745058f,-0.740951f,-0.736816f,-0.732654f,-0.728464f,-0.724247f,-0.720002f,-0.715731f,-0.711432f,
-0.707107f,-0.702754f,-0.698376f,-0.693971f,-0.689541f,-0.685084f,-0.680601f,-0.676093f,-0.671559f,-0.667000f,-0.662416f,-0.657807f,-0.653173f,-0.648514f,-0.643831f,-0.639124f,
-0.634393f,-0.629638f,-0.624859f,-0.620057f,-0.615231f,-0.610383f,-0.605511f,-0.600616f,-0.595699f,-0.590759f,-0.585798f,-0.580814f,-0.575808f,-0.570780f,-0.565732f,-0.560661f,
-0.555570f,-0.550458f,-0.545325f,-0.540172f,-0.534998f,-0.529804f,-0.524590f,-0.519356f,-0.514103f,-0.508830f,-0.503538f,-0.498228f,-0.492898f,-0.487550f,-0.482184f,-0.476799f,
-0.471397f,-0.465976f,-0.460538f,-0.455083f,-0.449611f,-0.444122f,-0.438616f,-0.433094f,-0.427555f,-0.422000f,-0.416429f,-0.410843f,-0.405241f,-0.399624f,-0.393992f,-0.388345f,
-0.382683f,-0.377007f,-0.371317f,-0.365613f,-0.359895f,-0.354163f,-0.348419f,-0.342661f,-0.336890f,-0.331106f,-0.325310f,-0.319502f,-0.313682f,-0.307849f,-0.302006f,-0.296151f,
-0.290284f,-0.284407f,-0.278519f,-0.272621f,-0.266712f,-0.260794f,-0.254865f,-0.248928f,-0.242980f,-0.237024f,-0.231058f,-0.225084f,-0.219101f,-0.213110f,-0.207111f,-0.201105f,
-0.195090f,-0.189069f,-0.183040f,-0.177004f,-0.170962f,-0.164913f,-0.158858f,-0.152797f,-0.146730f,-0.140658f,-0.134580f,-0.128498f,-0.122410f,-0.116318f,-0.110222f,-0.104121f,
-0.098017f,-0.091909f,-0.085797f,-0.079682f,-0.073565f,-0.067444f,-0.061321f,-0.055195f,-0.049068f,-0.042938f,-0.036807f,-0.030675f,-0.024541f,-0.018407f,-0.012271f,-0.006136f,
};

// tanh(-4.0f ・・4.0f)
const float tanhTable[1025] = {
-0.999329f,-0.999319f,-0.999308f,-0.999297f,-0.999286f,-0.999275f,-0.999263f,-0.999252f,-0.999240f,-0.999228f,-0.999216f,-0.999204f,-0.999191f,-0.999178f,-0.999165f,-0.999152f,
-0.999139f,-0.999125f,-0.999112f,-0.999098f,-0.999083f,-0.999069f,-0.999054f,-0.999039f,-0.999024f,-0.999009f,-0.998993f,-0.998977f,-0.998961f,-0.998945f,-0.998928f,-0.998912f,
-0.998894f,-0.998877f,-0.998859f,-0.998841f,-0.998823f,-0.998805f,-0.998786f,-0.998767f,-0.998747f,-0.998728f,-0.998708f,-0.998687f,-0.998667f,-0.998646f,-0.998624f,-0.998603f,
-0.998581f,-0.998558f,-0.998536f,-0.998513f,-0.998489f,-0.998465f,-0.998441f,-0.998417f,-0.998392f,-0.998367f,-0.998341f,-0.998315f,-0.998288f,-0.998261f,-0.998234f,-0.998206f,
-0.998178f,-0.998149f,-0.998120f,-0.998091f,-0.998061f,-0.998030f,-0.997999f,-0.997968f,-0.997936f,-0.997903f,-0.997870f,-0.997837f,-0.997803f,-0.997768f,-0.997733f,-0.997697f,
-0.997661f,-0.997624f,-0.997587f,-0.997549f,-0.997510f,-0.997471f,-0.997431f,-0.997391f,-0.997350f,-0.997308f,-0.997266f,-0.997223f,-0.997179f,-0.997135f,-0.997090f,-0.997044f,
-0.996998f,-0.996950f,-0.996902f,-0.996854f,-0.996804f,-0.996754f,-0.996703f,-0.996651f,-0.996599f,-0.996545f,-0.996491f,-0.996436f,-0.996380f,-0.996323f,-0.996265f,-0.996206f,
-0.996147f,-0.996086f,-0.996024f,-0.995962f,-0.995898f,-0.995834f,-0.995769f,-0.995702f,-0.995635f,-0.995566f,-0.995496f,-0.995426f,-0.995354f,-0.995281f,-0.995207f,-0.995131f,
-0.995055f,-0.994977f,-0.994898f,-0.994818f,-0.994737f,-0.994654f,-0.994570f,-0.994485f,-0.994398f,-0.994310f,-0.994221f,-0.994130f,-0.994038f,-0.993944f,-0.993849f,-0.993753f,
-0.993655f,-0.993555f,-0.993454f,-0.993351f,-0.993247f,-0.993141f,-0.993033f,-0.992924f,-0.992813f,-0.992700f,-0.992585f,-0.992469f,-0.992351f,-0.992231f,-0.992109f,-0.991985f,
-0.991860f,-0.991732f,-0.991602f,-0.991471f,-0.991337f,-0.991201f,-0.991063f,-0.990923f,-0.990781f,-0.990636f,-0.990490f,-0.990341f,-0.990189f,-0.990035f,-0.989879f,-0.989721f,
-0.989560f,-0.989396f,-0.989230f,-0.989061f,-0.988890f,-0.988716f,-0.988540f,-0.988360f,-0.988178f,-0.987993f,-0.987805f,-0.987614f,-0.987420f,-0.987223f,-0.987023f,-0.986820f,
-0.986614f,-0.986405f,-0.986192f,-0.985976f,-0.985757f,-0.985534f,-0.985308f,-0.985079f,-0.984846f,-0.984609f,-0.984368f,-0.984124f,-0.983876f,-0.983624f,-0.983368f,-0.983109f,
-0.982845f,-0.982577f,-0.982305f,-0.982029f,-0.981749f,-0.981464f,-0.981175f,-0.980881f,-0.980583f,-0.980280f,-0.979973f,-0.979661f,-0.979344f,-0.979022f,-0.978695f,-0.978363f,
-0.978026f,-0.977684f,-0.977336f,-0.976984f,-0.976626f,-0.976262f,-0.975892f,-0.975517f,-0.975137f,-0.974750f,-0.974358f,-0.973959f,-0.973554f,-0.973144f,-0.972726f,-0.972303f,
-0.971873f,-0.971436f,-0.970993f,-0.970543f,-0.970086f,-0.969622f,-0.969151f,-0.968673f,-0.968187f,-0.967694f,-0.967194f,-0.966686f,-0.966170f,-0.965647f,-0.965115f,-0.964575f,
-0.964028f,-0.963471f,-0.962907f,-0.962334f,-0.961752f,-0.961161f,-0.960562f,-0.959953f,-0.959335f,-0.958708f,-0.958072f,-0.957425f,-0.956769f,-0.956104f,-0.955428f,-0.954742f,
-0.954045f,-0.953338f,-0.952621f,-0.951893f,-0.951154f,-0.950404f,-0.949642f,-0.948870f,-0.948085f,-0.947289f,-0.946481f,-0.945662f,-0.944829f,-0.943985f,-0.943128f,-0.942258f,
-0.941376f,-0.940480f,-0.939571f,-0.938648f,-0.937712f,-0.936762f,-0.935799f,-0.934821f,-0.933828f,-0.932821f,-0.931799f,-0.930762f,-0.929710f,-0.928643f,-0.927560f,-0.926461f,
-0.925346f,-0.924215f,-0.923068f,-0.921903f,-0.920722f,-0.919524f,-0.918309f,-0.917075f,-0.915825f,-0.914556f,-0.913268f,-0.911963f,-0.910638f,-0.909295f,-0.907932f,-0.906550f,
-0.905148f,-0.903726f,-0.902284f,-0.900822f,-0.899339f,-0.897835f,-0.896309f,-0.894762f,-0.893193f,-0.891603f,-0.889989f,-0.888354f,-0.886695f,-0.885013f,-0.883308f,-0.881580f,
-0.879827f,-0.878050f,-0.876248f,-0.874422f,-0.872570f,-0.870693f,-0.868790f,-0.866862f,-0.864907f,-0.862925f,-0.860916f,-0.858881f,-0.856818f,-0.854727f,-0.852607f,-0.850460f,
-0.848284f,-0.846078f,-0.843844f,-0.841579f,-0.839285f,-0.836960f,-0.834605f,-0.832219f,-0.829802f,-0.827353f,-0.824872f,-0.822359f,-0.819814f,-0.817236f,-0.814624f,-0.811980f,
-0.809301f,-0.806588f,-0.803841f,-0.801060f,-0.798243f,-0.795391f,-0.792503f,-0.789579f,-0.786619f,-0.783622f,-0.780588f,-0.777518f,-0.774409f,-0.771263f,-0.768079f,-0.764856f,
-0.761594f,-0.758294f,-0.754954f,-0.751574f,-0.748154f,-0.744695f,-0.741195f,-0.737654f,-0.734071f,-0.730448f,-0.726783f,-0.723076f,-0.719328f,-0.715536f,-0.711702f,-0.707825f,
-0.703906f,-0.699942f,-0.695935f,-0.691885f,-0.687790f,-0.683651f,-0.679468f,-0.675240f,-0.670967f,-0.666649f,-0.662286f,-0.657878f,-0.653424f,-0.648924f,-0.644378f,-0.639787f,
-0.635149f,-0.630465f,-0.625735f,-0.620958f,-0.616134f,-0.611264f,-0.606348f,-0.601384f,-0.596374f,-0.591316f,-0.586212f,-0.581061f,-0.575862f,-0.570617f,-0.565325f,-0.559986f,
-0.554600f,-0.549167f,-0.543687f,-0.538161f,-0.532587f,-0.526968f,-0.521301f,-0.515589f,-0.509830f,-0.504025f,-0.498174f,-0.492278f,-0.486336f,-0.480349f,-0.474316f,-0.468239f,
-0.462117f,-0.455951f,-0.449741f,-0.443486f,-0.437189f,-0.430848f,-0.424464f,-0.418038f,-0.411570f,-0.405060f,-0.398509f,-0.391917f,-0.385284f,-0.378611f,-0.371899f,-0.365147f,
-0.358357f,-0.351529f,-0.344663f,-0.337761f,-0.330821f,-0.323846f,-0.316835f,-0.309789f,-0.302710f,-0.295596f,-0.288450f,-0.281272f,-0.274062f,-0.266821f,-0.259549f,-0.252248f,
-0.244919f,-0.237561f,-0.230176f,-0.222764f,-0.215326f,-0.207864f,-0.200377f,-0.192866f,-0.185333f,-0.177778f,-0.170202f,-0.162606f,-0.154991f,-0.147357f,-0.139705f,-0.132037f,
-0.124353f,-0.116654f,-0.108941f,-0.101215f,-0.093476f,-0.085727f,-0.077966f,-0.070197f,-0.062419f,-0.054633f,-0.046841f,-0.039043f,-0.031240f,-0.023433f,-0.015624f,-0.007812f,
0.000000f,0.007812f,0.015624f,0.023433f,0.031240f,0.039043f,0.046841f,0.054633f,0.062419f,0.070197f,0.077966f,0.085727f,0.093476f,0.101215f,0.108941f,0.116654f,
0.124353f,0.132037f,0.139705f,0.147357f,0.154991f,0.162606f,0.170202f,0.177778f,0.185333f,0.192866f,0.200377f,0.207864f,0.215326f,0.222764f,0.230176f,0.237561f,
0.244919f,0.252248f,0.259549f,0.266821f,0.274062f,0.281272f,0.288450f,0.295596f,0.302710f,0.309789f,0.316835f,0.323846f,0.330821f,0.337761f,0.344663f,0.351529f,
0.358357f,0.365147f,0.371899f,0.378611f,0.385284f,0.391917f,0.398509f,0.405060f,0.411570f,0.418038f,0.424464f,0.430848f,0.437189f,0.443486f,0.449741f,0.455951f,
0.462117f,0.468239f,0.474316f,0.480349f,0.486336f,0.492278f,0.498174f,0.504025f,0.509830f,0.515589f,0.521301f,0.526968f,0.532587f,0.538161f,0.543687f,0.549167f,
0.554600f,0.559986f,0.565325f,0.570617f,0.575862f,0.581061f,0.586212f,0.591316f,0.596374f,0.601384f,0.606348f,0.611264f,0.616134f,0.620958f,0.625735f,0.630465f,
0.635149f,0.639787f,0.644378f,0.648924f,0.653424f,0.657878f,0.662286f,0.666649f,0.670967f,0.675240f,0.679468f,0.683651f,0.687790f,0.691885f,0.695935f,0.699942f,
0.703906f,0.707825f,0.711702f,0.715536f,0.719328f,0.723076f,0.726783f,0.730448f,0.734071f,0.737654f,0.741195f,0.744695f,0.748154f,0.751574f,0.754954f,0.758294f,
0.761594f,0.764856f,0.768079f,0.771263f,0.774409f,0.777518f,0.780588f,0.783622f,0.786619f,0.789579f,0.792503f,0.795391f,0.798243f,0.801060f,0.803841f,0.806588f,
0.809301f,0.811980f,0.814624f,0.817236f,0.819814f,0.822359f,0.824872f,0.827353f,0.829802f,0.832219f,0.834605f,0.836960f,0.839285f,0.841579f,0.843844f,0.846078f,
0.848284f,0.850460f,0.852607f,0.854727f,0.856818f,0.858881f,0.860916f,0.862925f,0.864907f,0.866862f,0.868790f,0.870693f,0.872570f,0.874422f,0.876248f,0.878050f,
0.879827f,0.881580f,0.883308f,0.885013f,0.886695f,0.888354f,0.889989f,0.891603f,0.893193f,0.894762f,0.896309f,0.897835f,0.899339f,0.900822f,0.902284f,0.903726f,
0.905148f,0.906550f,0.907932f,0.909295f,0.910638f,0.911963f,0.913268f,0.914556f,0.915825f,0.917075f,0.918309f,0.919524f,0.920722f,0.921903f,0.923068f,0.924215f,
0.925346f,0.926461f,0.927560f,0.928643f,0.929710f,0.930762f,0.931799f,0.932821f,0.933828f,0.934821f,0.935799f,0.936762f,0.937712f,0.938648f,0.939571f,0.940480f,
0.941376f,0.942258f,0.943128f,0.943985f,0.944829f,0.945662f,0.946481f,0.947289f,0.948085f,0.948870f,0.949642f,0.950404f,0.951154f,0.951893f,0.952621f,0.953338f,
0.954045f,0.954742f,0.955428f,0.956104f,0.956769f,0.957425f,0.958072f,0.958708f,0.959335f,0.959953f,0.960562f,0.961161f,0.961752f,0.962334f,0.962907f,0.963471f,
0.964028f,0.964575f,0.965115f,0.965647f,0.966170f,0.966686f,0.967194f,0.967694f,0.968187f,0.968673f,0.969151f,0.969622f,0.970086f,0.970543f,0.970993f,0.971436f,
0.971873f,0.972303f,0.972726f,0.973144f,0.973554f,0.973959f,0.974358f,0.974750f,0.975137f,0.975517f,0.975892f,0.976262f,0.976626f,0.976984f,0.977336f,0.977684f,
0.978026f,0.978363f,0.978695f,0.979022f,0.979344f,0.979661f,0.979973f,0.980280f,0.980583f,0.980881f,0.981175f,0.981464f,0.981749f,0.982029f,0.982305f,0.982577f,
0.982845f,0.983109f,0.983368f,0.983624f,0.983876f,0.984124f,0.984368f,0.984609f,0.984846f,0.985079f,0.985308f,0.985534f,0.985757f,0.985976f,0.986192f,0.986405f,
0.986614f,0.986820f,0.987023f,0.987223f,0.987420f,0.987614f,0.987805f,0.987993f,0.988178f,0.988360f,0.988540f,0.988716f,0.988890f,0.989061f,0.989230f,0.989396f,
0.989560f,0.989721f,0.989879f,0.990035f,0.990189f,0.990341f,0.990490f,0.990636f,0.990781f,0.990923f,0.991063f,0.991201f,0.991337f,0.991471f,0.991602f,0.991732f,
0.991860f,0.991985f,0.992109f,0.992231f,0.992351f,0.992469f,0.992585f,0.992700f,0.992813f,0.992924f,0.993033f,0.993141f,0.993247f,0.993351f,0.993454f,0.993555f,
0.993655f,0.993753f,0.993849f,0.993944f,0.994038f,0.994130f,0.994221f,0.994310f,0.994398f,0.994485f,0.994570f,0.994654f,0.994737f,0.994818f,0.994898f,0.994977f,
0.995055f,0.995131f,0.995207f,0.995281f,0.995354f,0.995426f,0.995496f,0.995566f,0.995635f,0.995702f,0.995769f,0.995834f,0.995898f,0.995962f,0.996024f,0.996086f,
0.996147f,0.996206f,0.996265f,0.996323f,0.996380f,0.996436f,0.996491f,0.996545f,0.996599f,0.996651f,0.996703f,0.996754f,0.996804f,0.996854f,0.996902f,0.996950f,
0.996998f,0.997044f,0.997090f,0.997135f,0.997179f,0.997223f,0.997266f,0.997308f,0.997350f,0.997391f,0.997431f,0.997471f,0.997510f,0.997549f,0.997587f,0.997624f,
0.997661f,0.997697f,0.997733f,0.997768f,0.997803f,0.997837f,0.997870f,0.997903f,0.997936f,0.997968f,0.997999f,0.998030f,0.998061f,0.998091f,0.998120f,0.998149f,
0.998178f,0.998206f,0.998234f,0.998261f,0.998288f,0.998315f,0.998341f,0.998367f,0.998392f,0.998417f,0.998441f,0.998465f,0.998489f,0.998513f,0.998536f,0.998558f,
0.998581f,0.998603f,0.998624f,0.998646f,0.998667f,0.998687f,0.998708f,0.998728f,0.998747f,0.998767f,0.998786f,0.998805f,0.998823f,0.998841f,0.998859f,0.998877f,
0.998894f,0.998912f,0.998928f,0.998945f,0.998961f,0.998977f,0.998993f,0.999009f,0.999024f,0.999039f,0.999054f,0.999069f,0.999083f,0.999098f,0.999112f,0.999125f,
0.999139f,0.999152f,0.999165f,0.999178f,0.999191f,0.999204f,0.999216f,0.999228f,0.999240f,0.999252f,0.999263f,0.999275f,0.999286f,0.999297f,0.999308f,0.999319f,
0.999260f,
};

const float* waveTable[] = {
  waveSynthA2,
  waveSynthB2,
  waveAfuueCla,
  waveAfuueCla,
  waveAfuueBrass,
  waveAfuueFlute,
  waveAfuueViolin,
  wavePureSquare,
  wavePureSaw,
  wavePureTriangle,
  NULL,
};
const float* WaveData::GetWaveTable(int index) {
    return waveTable[index];
}

const char* waveName[] = {
  "SynthA",
  "SynthB",

  "A_Clarinet",
  "A_Recorder",
  "A_Brass",
  "A_Flute",
  "A_Violin",

  "P_Square",
  "P_Saw",
  "P_Triangle",
  NULL,
};
const char* WaveData::GetWaveName(int index) {
  return waveName[index];
}

const int waveLowPassQ[] = {
  5,
  5,

  6,
  8,
  7,
  5,
  3,

  5,
  10,
  20,
};

int WaveData::GetWaveLowPassQ(int index) {
  return waveLowPassQ[index];
}

const int waveTranspose[] = {
  0,
  0,

  0,
  0,
  0,
  0,
  -12,

  0,
  0,
  0,
};

int WaveData::GetWaveTranspose(int index) {
  return waveTranspose[index];
}

const int wavePortamento[] = {
  15,
  15,

  15,
  15,
  15,
  15,
  15,

  80,
  80,
  80,
};

int WaveData::GetWavePortamento(int index) {
  return wavePortamento[index];
}

const int waveAttackSoftness[] = {
  10,
  30,

  20,
  20,
  5,
  70,
  50,

  20,
  10,
  50,
};

int WaveData::GetWaveAttackSoftness(int index) {
  return waveAttackSoftness[index];
}

const float waveNoiseLevel[] = {
  0.0f,
  0.0f,

  0.0f,
  0.0f,
  0.0f,
  0.1f,
  0.0f,

  0.0f,
  0.0f,
  0.0f,
};

float WaveData::GetWaveNoiseLevel(int index) {
  return waveNoiseLevel[index];
}

const float waveAttackNoiseLevel[] = {
  0.5f,
  0.5f,

  0.5f,
  0.5f,
  0.5f,
  0.5f,
  0.0f,

  0.0f,
  0.0f,
  0.0f,
};

float WaveData::GetWaveAttackNoiseLevel(int index) {
  return waveAttackNoiseLevel[index];
}

const int wavePitchDropPos[] = {
  0,
  0,

  0,
  8,
  0,
  8,
  0,

  0,
  0,
  0,
};

int WaveData::GetWavePitchDropPos(int index) {
  return wavePitchDropPos[index];
}

const int wavePitchDropLevel[] = {
  0,
  0,

  0,
  6,
  0,
  1,
  0,

  0,
  0,
  0,
};

int WaveData::GetWavePitchDropLevel(int index) {
  return wavePitchDropLevel[index];
}

const float* WaveData::GetSinTable() const {
  return sinTable;
}

const float* WaveData::GetTanhTable() const {
  return tanhTable;
}
